buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.0.5.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
// 
// group = 'com.takipi'
// version =  '0.2.3'
// 
jar {
	enabled = true
}

ext {
  disableIDEWarnings = true
}

if (project.ext.has("backendJavac")) {
  compileJava {
    options.forkOptions.executable = project.ext.get("backendJavac")
  }
}

compileJava {
  sourceCompatibility = 1.8
  targetCompatibility = 1.8
}

bootJar {
	classifier = 'uber'
}

repositories {
    mavenLocal()
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile(
      "org.springframework.boot:spring-boot-starter-web",
      "org.apache.commons:commons-lang3:3.7",
      "org.ocpsoft.prettytime:prettytime:4.0.2.Final",
      "com.google.guava:guava:20.0",
      "org.slf4j:slf4j-api:1.7.25"
    )
    
    if (rootProject.hasProperty("localApiClient") && "$rootProject.localApiClient" == "true") {
      println "Compiling overops as influx with project api-client"

      compile (
        project(":api-client"),
        project(":api-client-util"),
      )
    } else {
      println "Compiling overops as influx with maven api-client"

      compile (
        "com.takipi:api-client:2.11.1",
        "com.takipi:api-client-util:2.11.1",
      )
    }

    testCompile("junit:junit")
}
